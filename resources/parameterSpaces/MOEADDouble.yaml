neighborhoodSize:
  type: integer
  range: [5, 50]
#
maximumNumberOfReplacedSolutions:
  type: integer
  range: [1, 5]
#
aggregationFunction:
  type: categorical
  globalSubParameters:
    normalizeObjectives:
      type: boolean
      values:
        true:
          conditionalSubParameters:
            epsilonParameterForNormalization:
              type: double
              range: [1.0E-8, 25.0]
        false:
  values:
    tschebyscheff:
    weightedSum:
    penaltyBoundaryIntersection:
      conditionalSubParameters:
        pbiTheta:
          type: double
          range: [1.0, 200.0]
    modifiedTschebyscheff:
#
algorithmResult:
  type: categorical
  values:
    externalArchive:
      conditionalSubParameters:
        externalArchive:
          type: categorical
          values:
            crowdingDistanceArchive:
            unboundedArchive:
    population:
#
subProblemIdGenerator:
  type: categorical
  values:
    permutation:
    integerSequence:
#
createInitialSolutions:
  type: categorical
  values:
    default:
    latinHypercubeSampling:
    scatterSearch:
#
variation:
  type: categorical
  globalSubParameters:
    mutation:
      type: categorical
      globalSubParameters:
        mutationProbabilityFactor:
          type: double
          range: [0.0, 2.0]
        mutationRepairStrategy:
          type: categorical
          values:
            random:
            round:
            bounds:
      values:
        uniform:
          conditionalSubParameters:
            uniformMutationPerturbation:
              type: double
              range: [0.0, 1.0]
        polynomial:
          conditionalSubParameters:
            polynomialMutationDistributionIndex:
              type: double
              range: [5.0, 400.0]
        linkedPolynomial:
          conditionalSubParameters:
            linkedPolynomialMutationDistributionIndex:
              type: double
              range: [5.0, 400.0]
        nonUniform:
          conditionalSubParameters:
            nonUniformMutationPerturbation:
              type: double
              range: [0.0, 1.0]
  values:
    crossoverAndMutationVariation:
      conditionalSubParameters:
        crossover:
          type: categorical
          globalSubParameters:
            crossoverProbability:
              type: double
              range: [0.0, 1.0]
            crossoverRepairStrategy:
              type: categorical
              values:
                random:
                round:
                bounds:
          values:
            SBX:
              conditionalSubParameters:
                sbxDistributionIndex:
                  type: double
                  range: [5.0, 400.0]
            BLX_ALPHA:
              conditionalSubParameters:
                blxAlphaCrossoverAlphaValue:
                  type: double
                  range: [0.0, 1.0]
            wholeArithmetic:
    differentialEvolutionVariation:
      conditionalSubParameters:
        differentialEvolutionCrossover:
          type: categorical
          globalSubParameters:
            CR:
              type: double
              range: [0.0, 1.0]
            F:
              type: double
              range: [0.0, 1.0]
          values:
            RAND_1_BIN:
            RAND_1_EXP:
            RAND_2_BIN:
#
selection:
  type: categorical
  values:
    populationAndNeighborhoodMatingPoolSelection:
      conditionalSubParameters:
        neighborhoodSelectionProbability:
          type: double
          range: [0.0, 1.0]