.. _irace:

irace Integration
=================

This section demonstrates how to use irace to automatically configure base-level metaheuristics. We use NSGA-II as the base-level metaheuristic and the ZDT problem set as our training benchmark.

While we assume the reader has basic familiarity with irace, we'll focus on the specific implementation details and resources provided in the Evolver framework. 

Prerequisites
-------------
Evolver includes an `irace <https://github.com/jMetal/Evolver/tree/main/src/main/java/org/uma/evolver/util/irace>`_ sub-package containing the `AutoNSGAIIIraceHV` class. This class evaluates configurations generated by irace using the Hypervolume (HV) indicator. You can customize the class as needed, particularly the base directory for reference fronts.

Before running irace, we need to generate a .jar file with the Evolver project. This can be done by running the following command:

.. code-block:: bash

    mvn clean package -DskipTests=true


The ``Evolver-2.0.jar-with-dependencies.jar`` file will be generated in the ``target`` folder of the source root of the Evolver project. Just copy it to the folder where you want to run irace.

Resources
---------

The ``src/main/java/resources/irace`` directory includes these essential files:

- ``irace_4.2.0.tar.gz``: The irace 4.2.0 package
- ``instances-list-ZDT.txt``: Configuration file specifying:

  - ZDT problem names (as defined in jMetal)
  - Corresponding reference front files
  - Maximum number of evaluations
  - Population size 

.. literalinclude:: ../src/main/resources/irace/instances-list-ZDT.txt
   :language: bash
   :linenos:
   :name: instances-list-zdt

- ``parameters-NSGAII.txt``: Parameter space definition for NSGA-II's continuous problem solver in irace format
- ``scenario-NSGAII.txt``: irace configuration file with experiment settings
- ``run.sh``: Shell script for executing irace with the specified configuration

Running irace
-------------   

To execute irace with the provided configuration, run:

.. code-block:: bash

    ./run.sh scenario-NSGAII.txt 1  

This will generate output files in the ``execdir-1`` directory.
    
