nsga_ii_parameters:
  
  # Algorithm result configuration
  algorithmResult:
    type: categorical
    values:
      population: {}
      externalArchive:
        populationSizeWithArchive:
          type: integer
          range: [10, 200]
        archiveType:
          type: categorical
          values: [crowdingDistanceArchive, unboundedArchive]

  # Initial solutions configuration
  createInitialSolutions:
    type: categorical
    values: [default, latinHypercubeSampling, scatterSearch]

  # Population configuration
  offspringPopulationSize:
    type: categorical
    values: [1, 2, 5, 10, 20, 50, 100, 200, 400]

  # Variation configuration
  variation:
    type: categorical
    values:
      crossoverAndMutationVariation:
        # Crossover configuration
        crossover:
          type: categorical
          values:
            SBX:
              sbxDistributionIndex:
                type: real
                range: [5.0, 400.0]
            BLX_ALPHA:
              blxAlphaCrossoverAlphaValue:
                type: real
                range: [0.0, 1.0]
            wholeArithmetic: {}
        
        crossoverProbability:
          type: real
          range: [0.0, 1.0]
          
        crossoverRepairStrategy:
          type: categorical
          values: [random, round, bounds]

        # Mutation configuration
        mutation:
          type: categorical
          values:
            uniform:
              uniformMutationPerturbation:
                type: real
                range: [0.0, 1.0]
            polynomial:
              polynomialMutationDistributionIndex:
                type: real
                range: [5.0, 400.0]
            linkedPolynomial:
              linkedPolynomialMutationDistributionIndex:
                type: real
                range: [5.0, 400.0]
            nonUniform:
              nonUniformMutationPerturbation:
                type: real
                range: [0.0, 1.0]
        
        mutationProbabilityFactor:
          type: real
          range: [0.0, 2.0]
          
        mutationRepairStrategy:
          type: categorical
          values: [random, round, bounds]

  # Selection configuration
  selection:
    type: categorical
    values:
      tournament:
        selectionTournamentSize:
          type: integer
          range: [2, 10]
      random: {}