algorithmResult:
  type: categorical
  values: 
    population: {}
    externalArchive:
      conditionalParameters:
        archiveType:
          type: categorical
          values:
            crowdingDistanceArchive: {}
            unboundedArchive: {}

createInitialSolutions:
  type: categorical
  values:
    default:

variation:
  type: categorical
  values:
    crossoverAndMutationVariation:
      conditionalParameters:
        crossover:
          type: categorical
          globalSubParameters:
            crossoverProbability:
              type: double
              range: [0.0, 1.0]
          values:
            PMX:
            OXD:
            CX:
        mutation:
          type: categorical
          globalSubParameters:
            mutationProbability:
              type: double
              range: [0.0, 1.0]
          values:
            swap:
            insert:
            scramble:
            inversion:
            simpleInversion:
            displacement:

selection:
  type: categorical
  values:
    random: {}
