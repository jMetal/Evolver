algorithmResult:
  type: categorical
  values: 
    population: {}
    externalArchive:
      conditionalParameters:
        archiveType:
          type: categorical
          values:
            crowdingDistanceArchive: {}
            unboundedArchive: {}

createInitialSolutions:
  type: categorical
  values:
    default: {}
    latinHypercubeSampling: {}
    scatterSearch: {}

variation:
  type: categorical
  values:
    crossoverAndMutationVariation:
      conditionalParameters:
        crossover:
          type: categorical
          globalSubParameters:
            crossoverProbability:
              type: double
              range: [0.0, 1.0]
            crossoverRepairStrategy:
              type: categorical
              values:
                random: {}
                round: {}
                bounds: {}
          values:
            SBX:
              conditionalParameters:
                sbxDistributionIndex:
                  type: double
                  range: [5.0, 400.0]
            blxAlpha:
              conditionalParameters:
                blxAlphaCrossoverAlpha:
                  type: double
                  range: [0.0, 1.0]
            wholeArithmetic: {}

        mutation:
          type: categorical
          globalSubParameters:
            mutationProbabilityFactor:
              type: double
              range: [0.0, 2.0]
            mutationRepairStrategy:
              type: categorical
              values:
                random: {}
                round: {}
                bounds: {}
          values:
            uniform:
              conditionalParameters:
                uniformMutationPerturbation:
                  type: double
                  range: [0.0, 1.0]
            polynomial:
              conditionalParameters:
                polynomialMutationDistributionIndex:
                  type: double
                  range: [5.0, 400.0]
            linkedPolynomial:
              conditionalParameters:
                linkedPolynomialMutationDistributionIndex:
                  type: double
                  range: [5.0, 400.0]
            nonUniform:
              conditionalParameters:
                nonUniformMutationPerturbation:
                  type: double
                  range: [0.0, 1.0]
            levyFlight:
              conditionalParameters:
                levyFlightMutationBeta:
                  type: double
                  range: [1.0, 2.0]
                levyFlightMutationStepSize:
                  type: double
                  range: [0.01, 1.0]
            powerLaw:
              conditionalParameters:
                powerLawMutationDelta:
                  type: double
                  range: [0.0, 10.0]

selection:
  type: categorical
  values:
    random: {}
